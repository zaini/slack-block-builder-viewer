{"version":3,"sources":["components/CodeEditor.tsx","components/Footer.tsx","BlockBuilderEditor.tsx","App.tsx","index.tsx","utils/utils.ts"],"names":["languageMap","languages","js","json","CodeEditor","language","value","setValue","onValueChange","code","highlight","padding","style","fontFamily","fontSize","backgroundColor","margin","border","Footer","textAlign","fontWeight","mb","href","BlockBuilderEditor","useState","default_code","default_result","result","setResult","default_preview_link","previewLink","setPreviewLink","error","setError","mt","size","textDecoration","p","colorScheme","onClick","evaluation","evaluateBlocks","previewUrl","evaluateCode","as","Link","status","trim","App","ReactDOM","render","document","getElementById","block_string","x","eval","Bits","Blocks","Elements","Surfaces","HomeTab","Message","Modal","WorkflowStep","Md","Button","ChannelMultiSelect","ChannelSelect","Checkboxes","ConversationMultiSelect","ConversationSelect","DatePicker","ExternalMultiSelect","ExternalSelect","Img","OverflowMenu","RadioButtons","StaticMultiSelect","StaticSelect","TextInput","TimePicker","UserMultiSelect","UserSelect","Actions","Context","Divider","File","Header","Image","Input","Section","Attachment","ConfirmationDialog","Option","OptionGroup","preview","blocks","JSON","parse","q","URLSearchParams","append","stringify"],"mappings":"wTAMMA,EAAyC,CAC3C,GAAMC,YAAUC,GAChB,KAAQD,YAAUE,MAuBPC,EApBI,SAAC,GAAiI,IAA/HC,EAA8H,EAA9HA,SAAUC,EAAoH,EAApHA,MAAOC,EAA6G,EAA7GA,SACnC,OACI,8BACI,cAAC,IAAD,CACID,MAAOA,EACPE,cAAe,SAACC,GAAD,OAAkBF,GAAYA,EAASE,IACtDC,UAAW,SAACD,GAAD,OAAkBC,oBAAUD,EAAMT,EAAYK,GAAWA,IACpEM,QAAS,GACTC,MAAO,CACHC,WAAY,sCACZC,SAAU,GACVC,gBAAiB,UACjBC,OAAQ,OACRC,OAAQ,wBCtBfC,EAAS,WAClB,OACI,eAAC,IAAD,CAAKC,UAAU,SAASC,WAAW,WAAWC,GAAG,IAAjD,+BACwB,cAAC,IAAD,CAAMC,KAAK,sDAAX,wB,QCsDjBC,EArDY,WAAO,IAAD,EACLC,mBAASC,GADJ,mBACxBnB,EADwB,KACjBC,EADiB,OAEHiB,mBAASE,GAFN,mBAExBC,EAFwB,KAEhBC,EAFgB,OAGOJ,mBAASK,GAHhB,mBAGxBC,EAHwB,KAGXC,EAHW,OAILP,mBAAS,IAJJ,mBAIxBQ,EAJwB,KAIjBC,EAJiB,KAkB/B,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASd,UAAU,SAASe,GAAG,OAA/B,wCACA,eAAC,IAAD,CAASf,UAAU,SAASe,GAAG,SAASC,KAAK,KAA7C,yDAA8F,cAAC,IAAD,CAAMvB,MAAO,CAAEwB,eAAgB,aAAed,KAAK,oDAAnD,oCAE9F,eAAC,IAAD,CAAMe,EAAE,IAAR,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASF,KAAK,KAAd,kBACA,cAAC,EAAD,CAAY9B,SAAS,KAAKC,MAAOA,EAAOC,SAAUA,OAGpD,eAAC,IAAD,WACE,cAAC,IAAD,CAAQ+B,YAAY,QAAQC,QAAS,kBAxBxB,WACnB,IACE,IAAMC,EAAaC,YAAenC,GAClCyB,EAAeS,EAAWE,YAC1Bd,EAAUY,EAAWrC,MACrB8B,EAAS,IACT,MAAOD,GACPJ,EAAU,IACVK,EAAS,GAAD,OAAID,KAgBmCW,IAA3C,2BAEA,cAAC,IAAD,CAAQC,GAAIC,IAAMvB,KAAMQ,EAAaQ,YAAY,OAAO1B,MAAO,CAAEwB,eAAgB,QAAjF,uCAECJ,GAAS,eAAC,IAAD,CAAOc,OAAO,QAAQ3B,UAAU,SAAhC,UACR,cAAC,IAAD,qBACA,cAAC,IAAD,UAAmBa,UAIvB,uBAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAASG,KAAK,KAAd,yBACA,cAAC,EAAD,CAAY9B,SAAS,OAAOC,MAAOqB,UAIvC,cAAC,EAAD,QAOAF,EAAe,8mBAoBnBsB,OACIlB,EAAuB,o2BACvBH,EAAc,ujBChFL,SAASsB,IACtB,OACE,cAAC,IAAD,UACE,cAAC,EAAD,MCFNC,IAASC,OACP,cAACF,EAAD,IACAG,SAASC,eAAe,U,6hBCJbX,eAAiB,SAAjBA,eAAkBY,cAC3B,IAAMC,EAAIC,KAAK,ifAAD,OACGF,aADH,0GADsC,GAG5BC,EAAEE,sDAAMC,wDAAQC,0DAAUC,0DAAUC,yDAASC,yDAASC,uDAAOC,8DAAcC,oDAAIC,wDAAQC,oEAAoBC,+DAAeC,4DAAYC,yEAAyBC,oEAAoBC,4DAAYC,qEAAqBC,gEAAgBC,qDAAKC,8DAAcC,8DAAcC,mEAAmBC,8DAAcC,2DAAWC,4DAAYC,iEAAiBC,4DAAYC,yDAASC,yDAASC,yDAASC,sDAAMC,wDAAQC,uDAAOC,uDAAOC,yDAASC,4DAAYC,oEAAoBC,wDAAQC,8DAHta,gLAG7C3F,KAH6C,OAGvC4F,QAHuC,OAI9CC,OAASC,KAAKC,MAAM/F,MAAX,OAETgG,EAAI,IAAIC,gBAId,OAHAD,EAAEE,OAAO,SAAUJ,KAAKK,UAAUN,SAClCG,EAAEE,OAAO,OAAQ,WAEV,CACH3D,WAAW,iDAAD,OAAmDyD,GAC7DhG,KAAMA,KACN6F,OAAQC,KAAKK,UAAUN,Y","file":"static/js/main.5fd883e1.chunk.js","sourcesContent":["import Editor from 'react-simple-code-editor';\nimport { Grammar, highlight, languages } from 'prismjs';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/components/prism-json';\nimport 'prismjs/themes/prism.css'\n\nconst languageMap: { [id: string]: Grammar } = {\n    \"js\": languages.js,\n    \"json\": languages.json\n}\n\nconst CodeEditor = ({ language, value, setValue }: { language: string, value: string, setValue?: React.Dispatch<React.SetStateAction<string>> }) => {\n    return (\n        <div>\n            <Editor\n                value={value}\n                onValueChange={(code: string) => setValue && setValue(code)}\n                highlight={(code: string) => highlight(code, languageMap[language], language)}\n                padding={10}\n                style={{\n                    fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n                    fontSize: 16,\n                    backgroundColor: \"#F6F6F6\",\n                    margin: \"2rem\",\n                    border: \"1px solid black\"\n                }}\n            />\n        </div>\n    )\n}\n\nexport default CodeEditor\n","import { Box, Link } from \"@chakra-ui/react\"\n\nexport const Footer = () => {\n    return (\n        <Box textAlign=\"center\" fontWeight=\"semibold\" mb=\"5\">\n            &copy; 2021 zaini - <Link href=\"https://github.com/zaini/slack-block-builder-viewer\">GitHub</Link>\n        </Box>\n    )\n}\n","import { Alert, AlertDescription, AlertTitle, Box, Button, Grid, GridItem, Heading, Link, Stack } from \"@chakra-ui/react\"\nimport { useState } from \"react\"\nimport CodeEditor from \"./components/CodeEditor\"\nimport { Footer } from \"./components/Footer\"\nimport { evaluateBlocks } from \"./utils/utils\"\n\nconst BlockBuilderEditor = () => {\n  const [value, setValue] = useState(default_code)\n  const [result, setResult] = useState(default_result)\n  const [previewLink, setPreviewLink] = useState(default_preview_link)\n  const [error, setError] = useState(\"\")\n\n  const evaluateCode = () => {\n    try {\n      const evaluation = evaluateBlocks(value)\n      setPreviewLink(evaluation.previewUrl)\n      setResult(evaluation.json)\n      setError(\"\")\n    } catch (error) {\n      setResult(\"\")\n      setError(`${error}`)\n    }\n  }\n\n  return (\n    <Box>\n      <Heading textAlign=\"center\" mt=\"2rem\">slack-block-builder-viewer</Heading>\n      <Heading textAlign=\"center\" mt=\"0.5rem\" size=\"md\">Generate JSON for the Slack Block Kit using <Link style={{ textDecoration: \"underline\" }} href=\"https://github.com/raycharius/slack-block-builder\">slack-block-builder</Link></Heading>\n\n      <Grid p=\"5\">\n        <GridItem>\n          <Heading size=\"lg\">REPL</Heading>\n          <CodeEditor language=\"js\" value={value} setValue={setValue} />\n        </GridItem>\n\n        <Stack>\n          <Button colorScheme=\"green\" onClick={() => evaluateCode()}>Generate JSON</Button>\n\n          <Button as={Link} href={previewLink} colorScheme=\"blue\" style={{ textDecoration: \"none\" }}>View on Block Kit Builder</Button>\n\n          {error && <Alert status=\"error\" textAlign=\"center\">\n            <AlertTitle>Error:</AlertTitle>\n            <AlertDescription>{error}</AlertDescription>\n          </Alert>}\n        </Stack>\n\n        <br />\n\n        <GridItem>\n          <Heading size=\"lg\">JSON Output</Heading>\n          <CodeEditor language=\"json\" value={result} />\n        </GridItem>\n      </Grid>\n\n      <Footer />\n    </Box>\n  )\n}\n\nexport default BlockBuilderEditor\n\nconst default_code = `\nMessage()\n    .channel(\"Channel name\")\n    .text('Alas, my friend.')\n    .blocks(\n      Blocks.Section()\n        .text('One does not simply walk into Slack and click a button.'),\n      Blocks.Section()\n        .text('At least that\\\\'s what my friend Slackomir said :crossed_swords:'),\n      Blocks.Divider(),\n      Blocks.Actions()\n        .elements(\n          Elements.Button()\n            .text('Sure One Does')\n            .actionId('gotClicked')\n            .danger(),\n          Elements.Button()\n            .text('One Does Not')\n            .actionId('scaredyCat')\n            .primary()))\n`.trim()\nconst default_preview_link = \"https://api.slack.com/tools/block-kit-builder?blocks=%5B%7B%22text%22%3A%7B%22type%22%3A%22mrkdwn%22%2C%22text%22%3A%22One+does+not+simply+walk+into+Slack+and+click+a+button.%22%7D%2C%22type%22%3A%22section%22%7D%2C%7B%22text%22%3A%7B%22type%22%3A%22mrkdwn%22%2C%22text%22%3A%22At+least+that%27s+what+my+friend+Slackomir+said+%3Acrossed_swords%3A%22%7D%2C%22type%22%3A%22section%22%7D%2C%7B%22type%22%3A%22divider%22%7D%2C%7B%22elements%22%3A%5B%7B%22text%22%3A%7B%22type%22%3A%22plain_text%22%2C%22text%22%3A%22Sure+One+Does%22%7D%2C%22action_id%22%3A%22gotClicked%22%2C%22style%22%3A%22danger%22%2C%22type%22%3A%22button%22%7D%2C%7B%22text%22%3A%7B%22type%22%3A%22plain_text%22%2C%22text%22%3A%22One+Does+Not%22%7D%2C%22action_id%22%3A%22scaredyCat%22%2C%22style%22%3A%22primary%22%2C%22type%22%3A%22button%22%7D%5D%2C%22type%22%3A%22actions%22%7D%5D&mode=message\"\nconst default_result = `{\"channel\":\"Channel name\",\"text\":\"Alas, my friend.\",\"blocks\":[{\"text\":{\"type\":\"mrkdwn\",\"text\":\"One does not simply walk into Slack and click a button.\"},\"type\":\"section\"},{\"text\":{\"type\":\"mrkdwn\",\"text\":\"At least that's what my friend Slackomir said :crossed_swords:\"},\"type\":\"section\"},{\"type\":\"divider\"},{\"elements\":[{\"text\":{\"type\":\"plain_text\",\"text\":\"Sure One Does\"},\"action_id\":\"gotClicked\",\"style\":\"danger\",\"type\":\"button\"},{\"text\":{\"type\":\"plain_text\",\"text\":\"One Does Not\"},\"action_id\":\"scaredyCat\",\"style\":\"primary\",\"type\":\"button\"}],\"type\":\"actions\"}]}`\n","import { ChakraProvider } from \"@chakra-ui/react\"\nimport BlockBuilderEditor from \"./BlockBuilderEditor\"\n\nexport default function App() {\n  return (\n    <ChakraProvider>\n      <BlockBuilderEditor />\n    </ChakraProvider>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n","import { Bits, Blocks, Elements, Surfaces, HomeTab, Message, Modal, WorkflowStep, Md, Button, ChannelMultiSelect, ChannelSelect, Checkboxes, ConversationMultiSelect, ConversationSelect, DatePicker, ExternalMultiSelect, ExternalSelect, Img, OverflowMenu, RadioButtons, StaticMultiSelect, StaticSelect, TextInput, TimePicker, UserMultiSelect, UserSelect, Actions, Context, Divider, File, Header, Image, Input, Section, Attachment, ConfirmationDialog, Option, OptionGroup } from 'slack-block-builder';\n\nexport const evaluateBlocks = (block_string: string) => {\n    const x = eval(`(function a(Bits, Blocks, Elements, Surfaces, HomeTab, Message, Modal, WorkflowStep, Md, Button, ChannelMultiSelect, ChannelSelect, Checkboxes, ConversationMultiSelect, ConversationSelect, DatePicker, ExternalMultiSelect, ExternalSelect, Img, OverflowMenu, RadioButtons, StaticMultiSelect, StaticSelect, TextInput, TimePicker, UserMultiSelect, UserSelect, Actions, Context, Divider, File, Header, Image, Input, Section, Attachment, ConfirmationDialog, Option, OptionGroup) \n    { const code = ${block_string}; const json = code.buildToJSON(); const preview = code.printPreviewUrl(); return [json, preview]; })`)\n    const [json, preview] = x(Bits, Blocks, Elements, Surfaces, HomeTab, Message, Modal, WorkflowStep, Md, Button, ChannelMultiSelect, ChannelSelect, Checkboxes, ConversationMultiSelect, ConversationSelect, DatePicker, ExternalMultiSelect, ExternalSelect, Img, OverflowMenu, RadioButtons, StaticMultiSelect, StaticSelect, TextInput, TimePicker, UserMultiSelect, UserSelect, Actions, Context, Divider, File, Header, Image, Input, Section, Attachment, ConfirmationDialog, Option, OptionGroup)\n    const blocks = JSON.parse(json)[\"blocks\"]\n\n    const q = new URLSearchParams()\n    q.append('blocks', JSON.stringify(blocks))\n    q.append('mode', 'message')\n\n    return {\n        previewUrl: `https://api.slack.com/tools/block-kit-builder?${q}`,\n        json: json,\n        blocks: JSON.stringify(blocks)\n    }\n}"],"sourceRoot":""}