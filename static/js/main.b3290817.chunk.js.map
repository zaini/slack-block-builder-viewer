{"version":3,"sources":["components/CodeEditor.tsx","App.tsx","index.tsx"],"names":["languageMap","languages","js","json","CodeEditor","language","value","setValue","onValueChange","code","highlight","padding","style","fontFamily","fontSize","defaultPreviewLink","defaultResult","App","useState","result","setResult","previewLink","setPreviewLink","error","setError","evaluateCode","x","eval","res","Message","Blocks","Elements","blocks","JSON","parse","q","URLSearchParams","append","stringify","onClick","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+IAAA,wDAMMA,EAAyC,CAC3C,GAAMC,YAAUC,GAChB,KAAQD,YAAUE,MAoBPC,IAjBI,SAAC,GAAiI,IAA/HC,EAA8H,EAA9HA,SAAUC,EAAoH,EAApHA,MAAOC,EAA6G,EAA7GA,SACnC,OACI,8BACI,cAAC,IAAD,CACID,MAAOA,EACPE,cAAe,SAACC,GAAD,OAAkBF,GAAYA,EAASE,IACtDC,UAAW,SAACD,GAAD,OAAkBC,oBAAUD,EAAMT,EAAYK,GAAWA,IACpEM,QAAS,GACTC,MAAO,CACHC,WAAY,sCACZC,SAAU,U,03BCjBxBL,KAAI,8mBAqBJM,mBAAqB,o2BACrBC,cAAa,ujBAEbC,IAAM,SAANA,MAAa,IAAD,UACUC,oDAAST,MADnB,8LACTH,MADS,cACFC,SADE,yBAEYW,oDAASF,eAFrB,+LAETG,OAFS,cAEDC,UAFC,yBAGsBF,oDAASH,oBAH/B,+LAGTM,YAHS,cAGIC,eAHJ,yBAIUJ,oDAAS,IAJnB,+LAITK,MAJS,cAIFC,SAJE,cAMVC,aAAe,SAAfA,eACJ,IACE,IAAMC,EAAIC,KAAK,wDAAD,OAAyDrB,MAAzD,mCACRsB,IAAMF,EAAEG,yDAASC,wDAAQC,2DACzBC,OAASC,KAAKC,MAAMN,KAAX,OAETO,EAAI,IAAIC,gBACdD,EAAEE,OAAO,SAAUJ,KAAKK,UAAUN,SAClCG,EAAEE,OAAO,OAAQ,WACjBf,eAAe,iDAAD,OAAkDa,IAEhEf,UAAUQ,KACV,MAAOL,OACPH,UAAU,IACVI,SAAS,GAAD,OAAID,UAIhB,OACE,6EACE,yGACA,2DAAC,sDAAD,CAAYlB,SAAS,KAAKC,MAAOA,MAAOC,SAAUA,WAElD,oEAEA,qEAAQgC,QAASd,aAAjB,sBAEA,oEAEA,qFAEA,gEAAGe,KAAMnB,YAAT,yCAEA,oEAEA,2DAAC,sDAAD,CAAYhB,SAAS,OAAOC,MAAOa,SAEnC,oEAECI,OAAS,CAAC,oFAAgBA,WAMlBN,2B,gCC/Ef,4DAIAwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b3290817.chunk.js","sourcesContent":["import Editor from 'react-simple-code-editor';\nimport { Grammar, highlight, languages } from 'prismjs';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/components/prism-json';\nimport 'prismjs/themes/prism.css'\n\nconst languageMap: { [id: string]: Grammar } = {\n    \"js\": languages.js,\n    \"json\": languages.json\n}\n\nconst CodeEditor = ({ language, value, setValue }: { language: string, value: string, setValue?: React.Dispatch<React.SetStateAction<string>> }) => {\n    return (\n        <div>\n            <Editor\n                value={value}\n                onValueChange={(code: string) => setValue && setValue(code)}\n                highlight={(code: string) => highlight(code, languageMap[language], language)}\n                padding={10}\n                style={{\n                    fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n                    fontSize: 16,\n                }}\n            />\n        </div>\n    )\n}\n\nexport default CodeEditor\n","import { useState } from \"react\"\nimport CodeEditor from \"./components/CodeEditor\"\nimport { Message, Blocks, Elements } from 'slack-block-builder';\n\nconst code = `\nMessage()\n    .channel(\"Channel name\")\n    .text('Alas, my friend.')\n    .blocks(\n      Blocks.Section()\n        .text('One does not simply walk into Slack and click a button.'),\n      Blocks.Section()\n        .text('At least that\\\\'s what my friend Slackomir said :crossed_swords:'),\n      Blocks.Divider(),\n      Blocks.Actions()\n        .elements(\n          Elements.Button()\n            .text('Sure One Does')\n            .actionId('gotClicked')\n            .danger(),\n          Elements.Button()\n            .text('One Does Not')\n            .actionId('scaredyCat')\n            .primary()))\n`\nconst defaultPreviewLink = \"https://api.slack.com/tools/block-kit-builder?blocks=%5B%7B%22text%22%3A%7B%22type%22%3A%22mrkdwn%22%2C%22text%22%3A%22One+does+not+simply+walk+into+Slack+and+click+a+button.%22%7D%2C%22type%22%3A%22section%22%7D%2C%7B%22text%22%3A%7B%22type%22%3A%22mrkdwn%22%2C%22text%22%3A%22At+least+that%27s+what+my+friend+Slackomir+said+%3Acrossed_swords%3A%22%7D%2C%22type%22%3A%22section%22%7D%2C%7B%22type%22%3A%22divider%22%7D%2C%7B%22elements%22%3A%5B%7B%22text%22%3A%7B%22type%22%3A%22plain_text%22%2C%22text%22%3A%22Sure+One+Does%22%7D%2C%22action_id%22%3A%22gotClicked%22%2C%22style%22%3A%22danger%22%2C%22type%22%3A%22button%22%7D%2C%7B%22text%22%3A%7B%22type%22%3A%22plain_text%22%2C%22text%22%3A%22One+Does+Not%22%7D%2C%22action_id%22%3A%22scaredyCat%22%2C%22style%22%3A%22primary%22%2C%22type%22%3A%22button%22%7D%5D%2C%22type%22%3A%22actions%22%7D%5D&mode=message\"\nconst defaultResult = `{\"channel\":\"Channel name\",\"text\":\"Alas, my friend.\",\"blocks\":[{\"text\":{\"type\":\"mrkdwn\",\"text\":\"One does not simply walk into Slack and click a button.\"},\"type\":\"section\"},{\"text\":{\"type\":\"mrkdwn\",\"text\":\"At least that's what my friend Slackomir said :crossed_swords:\"},\"type\":\"section\"},{\"type\":\"divider\"},{\"elements\":[{\"text\":{\"type\":\"plain_text\",\"text\":\"Sure One Does\"},\"action_id\":\"gotClicked\",\"style\":\"danger\",\"type\":\"button\"},{\"text\":{\"type\":\"plain_text\",\"text\":\"One Does Not\"},\"action_id\":\"scaredyCat\",\"style\":\"primary\",\"type\":\"button\"}],\"type\":\"actions\"}]}`\n\nconst App = () => {\n  const [value, setValue] = useState(code)\n  const [result, setResult] = useState(defaultResult)\n  const [previewLink, setPreviewLink] = useState(defaultPreviewLink)\n  const [error, setError] = useState(\"\")\n\n  const evaluateCode = () => {\n    try {\n      const x = eval(`(function a(Message, Blocks, Elements) { const res = ${value}.buildToJSON(); return res; })`)\n      const res = x(Message, Blocks, Elements)\n      const blocks = JSON.parse(res)[\"blocks\"]\n\n      const q = new URLSearchParams()\n      q.append('blocks', JSON.stringify(blocks))\n      q.append('mode', 'message')\n      setPreviewLink(`https://api.slack.com/tools/block-kit-builder?${q}`)\n\n      setResult(res)\n    } catch (error) {\n      setResult(\"\")\n      setError(`${error}`)\n    }\n  }\n\n  return (\n    <div>\n      <h1>slack-block-builder-viewer</h1>\n      <CodeEditor language=\"js\" value={value} setValue={setValue} />\n\n      <br />\n\n      <button onClick={evaluateCode}>evaluate</button>\n\n      <br />\n\n      <h2>result</h2>\n\n      <a href={previewLink}>view on slack block builder</a>\n\n      <br />\n\n      <CodeEditor language=\"json\" value={result} />\n\n      <br />\n\n      {error && [<h2>error</h2>, error]}\n\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}